 ############################### :: BINARY SEARCH TREES :: ################################

<> Requires a sorted tree-like structure to operate on

<> A tree like structure is composed by a root node, a left subtree and a right subtree.
   Left subtrees usually hold values smaller than the root while the Right subtree holds values bigger than the root

<> The root node is used as the entry point of the structure and thus any node can be accessed via the root node

<> Tree nodes are either a branch node or leaf node:
    - Branch node = has child nodes attached bellow 
    - Leaf node   = has no child nodes bellow it

<> Search requirements and parameters

    - List  = must be totally ordered 

    - key   = its the index of the data located from the tree.
              keys must be distinct from each other (A > B or A <  B)

    - Search  = transitivity must be applied to the search process 
                ( if  A < B and B < C then A < C) 

    - Distance between nodes =  from the current node count from 0 up to the target node  

    - Height of tree =  from the bottom node count from 1 up to the root node  


<> Binary Trees structures also vary in composition:
    - Balanced binary tree =  The difference between the height of the 
                              leftsubtree and the rightsubtree must be at most one
    - Full binary tree     =  each node has 2 or no child nodes
    - Complete binary tree =  the node above a leaf node must have 
                               a sibling node attached to its parent also
    - Tertiary trees       =  
    - Quaternary trees     =  
    - Octrees              = A binary tree in which each node has 8 child nodes attached bellow it  




