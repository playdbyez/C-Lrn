// Define a c program called progY.c

$ gcc ./progY.c
//compile progY.c

$ gdb a.out
// Open binnary in GDB



(gdb) dissas main
// Displays the assambler version of the program
//OutPut:
Dump of assembler code for function main:
0x0000000000001149      <+0>:	endbr64	
0x000000000000114d	<+4>:	push	rbp	
0x000000000000114e	<+5>:	mov	rbp,rsp	
0x0000000000001151	<+8>:	sub	rsp,0x30	
0x0000000000001155	<+12>:	mov	DWORD PTR	[rbp-0x24],edi
0x0000000000001158	<+15>:	mov	QWORD PTR	[rbp-0x30],rsi
Ox000000000000115c	<+19>:	mov	DWORD PTR	[rbp-0x1c],0x1
0x0000000000001163	<+26>:	mov	DWORD PTR	[rbp-0x18],0x2
Ox000000000000116a	<+33>:	mov	DWORD PTR	[rbp-0x14],0x3
0x0000000000001171	<+40>:	mov	DWORD PTR	[rbp-0x10],0x4
0x0000000000001178	<+47>:	mov	DWORD PTR	[rbp-0xc],0x5
0x000000000000117f	<+54>:	mov	DWORD PTR	[rbp-0x8],0x6
0x0000000000001186	<+61>:	mov	DWORD PTR	[rbp-0x4],0x7
Ox000000000000118d	<+68>:	mov	r8d,DWORD PTR	[rbp-0xc]	
0x0000000000001191	<+72>:	mov	edi,DWORD PTR	[rbp-0x10]
0x0000000000001194	<+75>:	mov	ecx,DWORD PTR	[rbp-0x14]	
0x0000000000001197	<+78>:	mov	edx,DWORD PTR	[rbp-0x18]	
0x000000000000119a	<+81>:	mov	eax,DWORD PTR	[rbp-0x1c]	
0x000000000000119d	<+84>:	mov	esi,DWORD PTR	[rbp-0x4]	
0x00000000000011a0	<+87>:	push	rsi	
0x00000000000011a1	<+88>:	mov	esi,DWORD PTR	[rbp-0x8]	
0x00000000000011a4	<+91>:	push	rsi	
0x00000000000011a5	<+92>:	mov	r9d,r8d	
0x00000000000011a8	<+95>:	mov	r8d,edi	
0x00000000000011ab	<+98>:	mov	esi,eax	
0x00000000000011ad	<+100>:	lea	rax,[rip+Oxe50	]	# 0x2004
0x00000000000011b4	<+107>:	mov	rdi,rax	
0x00000000000011b7	<+110>:	mov	eax,0x0	
0x00000000000011bc	<+115>:	call	Ox1050 <printf@plt>	
0x00000000000011c1	<+120>:	add	rsp,Ox10	
0x00000000000011c5	<+124>:	mov	eax,0x0	
0x00000000000011ca	<+129>: leave		
0x00000000000011cb	<+130>:	ret		
End of assembler dump.



https://www.youtube.com/watch?v=vc_9Ujkpy7I
